{"swagger":"2.0","info":{"version":"1.0.0","title":"industry-sol-portal"},"basePath":"/api","paths":{"/users/{id}/accessTokens/{fk}":{"get":{"tags":["user"],"summary":"Find a related item by id for accessTokens.","operationId":"user.prototype.__findById__accessTokens","parameters":[{"name":"fk","in":"path","description":"Foreign key for accessTokens","required":true,"type":"string","format":"JSON"},{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AccessToken"}}},"deprecated":false},"delete":{"tags":["user"],"summary":"Delete a related item by id for accessTokens.","operationId":"user.prototype.__destroyById__accessTokens","parameters":[{"name":"fk","in":"path","description":"Foreign key for accessTokens","required":true,"type":"string","format":"JSON"},{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false},"put":{"tags":["user"],"summary":"Update a related item by id for accessTokens.","operationId":"user.prototype.__updateById__accessTokens","parameters":[{"name":"fk","in":"path","description":"Foreign key for accessTokens","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/AccessToken"}},{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AccessToken"}}},"deprecated":false}},"/users/{id}/accessTokens":{"get":{"tags":["user"],"summary":"Queries accessTokens of user.","operationId":"user.prototype.__get__accessTokens","parameters":[{"name":"filter","in":"query","required":false,"type":"string","format":"JSON"},{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/AccessToken"}}}},"deprecated":false},"post":{"tags":["user"],"summary":"Creates a new instance in accessTokens of this model.","operationId":"user.prototype.__create__accessTokens","parameters":[{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/AccessToken"}},{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AccessToken"}}},"deprecated":false},"delete":{"tags":["user"],"summary":"Deletes all accessTokens of this model.","operationId":"user.prototype.__delete__accessTokens","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/users/{id}/accessTokens/count":{"get":{"tags":["user"],"summary":"Counts accessTokens of user.","operationId":"user.prototype.__count__accessTokens","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/users":{"post":{"tags":["user"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"user.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/user"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/user"}}},"deprecated":false},"put":{"tags":["user"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"user.upsert__put_users","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/user"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/user"}}},"deprecated":false},"patch":{"tags":["user"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"user.upsert__patch_users","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/user"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/user"}}},"deprecated":false},"get":{"tags":["user"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"user.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/user"}}}},"deprecated":false}},"/users/replaceOrCreate":{"post":{"tags":["user"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"user.replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/user"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/user"}}},"deprecated":false}},"/users/upsertWithWhere":{"post":{"tags":["user"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"user.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/user"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/user"}}},"deprecated":false}},"/users/{id}/exists":{"get":{"tags":["user"],"summary":"Check whether a model instance exists in the data source.","operationId":"user.exists__get_users_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/users/{id}":{"head":{"tags":["user"],"summary":"Check whether a model instance exists in the data source.","operationId":"user.exists__head_users_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["user"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"user.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/user"}}},"deprecated":false},"delete":{"tags":["user"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"user.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"put":{"tags":["user"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"user.prototype.updateAttributes__put_users_{id}","parameters":[{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/user"}},{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/user"}}},"deprecated":false},"patch":{"tags":["user"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"user.prototype.updateAttributes__patch_users_{id}","parameters":[{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/user"}},{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/user"}}},"deprecated":false}},"/users/{id}/replace":{"post":{"tags":["user"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"user.replaceById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/user"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/user"}}},"deprecated":false}},"/users/findOne":{"get":{"tags":["user"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"user.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/user"}}},"deprecated":false}},"/users/update":{"post":{"tags":["user"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"user.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/user"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/users/count":{"get":{"tags":["user"],"summary":"Count instances of the model matched by where from the data source.","operationId":"user.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/users/change-stream":{"post":{"tags":["user"],"summary":"Create a change stream.","operationId":"user.createChangeStream__post_users_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["user"],"summary":"Create a change stream.","operationId":"user.createChangeStream__get_users_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/users/login":{"post":{"tags":["user"],"summary":"Login a user with username/email and password.","operationId":"user.login","parameters":[{"name":"credentials","in":"body","required":true,"schema":{"type":"object"}},{"name":"include","in":"query","description":"Related objects to include in the response. See the description of return value for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"description":"The response body contains properties of the AccessToken created on login.\nDepending on the value of `include` parameter, the body may contain additional properties:\n\n  - `user` - `U+007BUserU+007D` - Data of the currently logged in user. (`include=user`)\n\n","type":"object"}}},"deprecated":false}},"/users/logout":{"post":{"tags":["user"],"summary":"Logout a user with access token.","operationId":"user.logout","parameters":[],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/users/confirm":{"get":{"tags":["user"],"summary":"Confirm a user registration with email verification token.","operationId":"user.confirm","parameters":[{"name":"uid","in":"query","required":true,"type":"string"},{"name":"token","in":"query","required":true,"type":"string"},{"name":"redirect","in":"query","required":false,"type":"string"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/users/reset":{"post":{"tags":["user"],"summary":"Reset password for a user with email.","operationId":"user.resetPassword","parameters":[{"name":"options","in":"body","required":true,"schema":{"type":"object"}}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/applications/{id}/user":{"get":{"tags":["application"],"summary":"Fetches belongsTo relation user.","operationId":"application.prototype.__get__user","parameters":[{"name":"refresh","in":"query","required":false,"type":"boolean"},{"name":"id","in":"path","description":"PersistedModel id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/user"}}},"deprecated":false}},"/applications":{"post":{"tags":["application"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"application.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/application"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/application"}}},"deprecated":false},"put":{"tags":["application"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"application.upsert__put_applications","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/application"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/application"}}},"deprecated":false},"patch":{"tags":["application"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"application.upsert__patch_applications","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/application"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/application"}}},"deprecated":false},"get":{"tags":["application"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"application.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/application"}}}},"deprecated":false}},"/applications/replaceOrCreate":{"post":{"tags":["application"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"application.replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/application"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/application"}}},"deprecated":false}},"/applications/upsertWithWhere":{"post":{"tags":["application"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"application.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/application"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/application"}}},"deprecated":false}},"/applications/{id}/exists":{"get":{"tags":["application"],"summary":"Check whether a model instance exists in the data source.","operationId":"application.exists__get_applications_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/applications/{id}":{"head":{"tags":["application"],"summary":"Check whether a model instance exists in the data source.","operationId":"application.exists__head_applications_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["application"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"application.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/application"}}},"deprecated":false},"delete":{"tags":["application"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"application.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"put":{"tags":["application"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"application.prototype.updateAttributes__put_applications_{id}","parameters":[{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/application"}},{"name":"id","in":"path","description":"PersistedModel id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/application"}}},"deprecated":false},"patch":{"tags":["application"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"application.prototype.updateAttributes__patch_applications_{id}","parameters":[{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/application"}},{"name":"id","in":"path","description":"PersistedModel id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/application"}}},"deprecated":false}},"/applications/{id}/replace":{"post":{"tags":["application"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"application.replaceById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/application"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/application"}}},"deprecated":false}},"/applications/findOne":{"get":{"tags":["application"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"application.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/application"}}},"deprecated":false}},"/applications/update":{"post":{"tags":["application"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"application.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/application"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/applications/count":{"get":{"tags":["application"],"summary":"Count instances of the model matched by where from the data source.","operationId":"application.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/applications/change-stream":{"post":{"tags":["application"],"summary":"Create a change stream.","operationId":"application.createChangeStream__post_applications_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["application"],"summary":"Create a change stream.","operationId":"application.createChangeStream__get_applications_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/locations":{"post":{"tags":["location"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"location.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/location"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/location"}}},"deprecated":false},"put":{"tags":["location"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"location.upsert__put_locations","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/location"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/location"}}},"deprecated":false},"patch":{"tags":["location"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"location.upsert__patch_locations","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/location"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/location"}}},"deprecated":false},"get":{"tags":["location"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"location.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/location"}}}},"deprecated":false}},"/locations/replaceOrCreate":{"post":{"tags":["location"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"location.replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/location"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/location"}}},"deprecated":false}},"/locations/upsertWithWhere":{"post":{"tags":["location"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"location.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/location"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/location"}}},"deprecated":false}},"/locations/{id}/exists":{"get":{"tags":["location"],"summary":"Check whether a model instance exists in the data source.","operationId":"location.exists__get_locations_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/locations/{id}":{"head":{"tags":["location"],"summary":"Check whether a model instance exists in the data source.","operationId":"location.exists__head_locations_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["location"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"location.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/location"}}},"deprecated":false},"delete":{"tags":["location"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"location.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"put":{"tags":["location"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"location.prototype.updateAttributes__put_locations_{id}","parameters":[{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/location"}},{"name":"id","in":"path","description":"PersistedModel id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/location"}}},"deprecated":false},"patch":{"tags":["location"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"location.prototype.updateAttributes__patch_locations_{id}","parameters":[{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/location"}},{"name":"id","in":"path","description":"PersistedModel id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/location"}}},"deprecated":false}},"/locations/{id}/replace":{"post":{"tags":["location"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"location.replaceById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/location"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/location"}}},"deprecated":false}},"/locations/findOne":{"get":{"tags":["location"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"location.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/location"}}},"deprecated":false}},"/locations/update":{"post":{"tags":["location"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"location.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/location"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/locations/count":{"get":{"tags":["location"],"summary":"Count instances of the model matched by where from the data source.","operationId":"location.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/locations/change-stream":{"post":{"tags":["location"],"summary":"Create a change stream.","operationId":"location.createChangeStream__post_locations_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["location"],"summary":"Create a change stream.","operationId":"location.createChangeStream__get_locations_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/services":{"get":{"tags":["service"],"summary":"Find all services in the catalog matched by filter from Brooklyn.","operationId":"service.services","parameters":[{"name":"filter","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"string"}}},"deprecated":false}},"/services/{id}":{"get":{"tags":["service"],"summary":"Return a single catalog item with detailed information.","operationId":"service.single","parameters":[{"name":"id","in":"path","description":"Brooklyn ID","required":true,"type":"string"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"string"}}},"deprecated":false}}},"tags":[{"name":"user"},{"name":"application"},{"name":"location"},{"name":"service"}],"consumes":["application/json","application/x-www-form-urlencoded","application/xml","text/xml"],"produces":["application/json","application/xml","text/xml","application/javascript","text/javascript"],"definitions":{"x-any":{"properties":{}},"AccessToken":{"properties":{"id":{"type":"string"},"ttl":{"default":1209600,"description":"time to live in seconds (2 weeks by default)","type":"number","format":"double"},"created":{"type":"string","format":"date"},"userId":{"type":"number","format":"double"}},"required":["id"],"additionalProperties":false},"user":{"properties":{"realm":{"type":"string"},"username":{"type":"string"},"credentials":{"type":"object"},"challenges":{"type":"object"},"email":{"type":"string"},"emailVerified":{"type":"boolean"},"status":{"type":"string"},"created":{"type":"string","format":"date"},"lastUpdated":{"type":"string","format":"date"},"id":{"type":"number","format":"double"}},"required":["email"],"additionalProperties":false},"application":{"properties":{"name":{"type":"string"},"brooklyn_id":{"type":"string"},"catalog_id":{"type":"string"},"status":{"type":"string"},"id":{"type":"number","format":"double"},"userId":{"type":"number","format":"double"}},"required":["name","brooklyn_id","catalog_id"],"additionalProperties":false},"location":{"properties":{"name":{"type":"string"},"brooklyn_id":{"type":"number","format":"double"},"id":{"type":"number","format":"double"}},"required":["name","brooklyn_id"],"additionalProperties":false}}}